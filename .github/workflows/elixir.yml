name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: erp_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.18.0' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: backend/deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      working-directory: ./backend
      run: mix deps.get
    - name: Wait for Postgres
      run: |
        for i in {1..30}; do
          pg_isready -h localhost -p 5432 -U postgres && break
          sleep 1
        done
    - name: Setup DB
      working-directory: ./backend
      run: |
        MIX_ENV=test mix ecto.create
        MIX_ENV=test mix ecto.migrate
    - name: Run tests
      working-directory: ./backend
      run: mix test
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Docker image
      working-directory: ./backend
      run: |
        docker build -t ghcr.io/${{ github.repository }}/backend:latest .
    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository }}/backend:latest
